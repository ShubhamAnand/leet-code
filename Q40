class Solution {
public:
    void backtrack(vector<vector<int>> &result,vector<int> &candidates,vector<int> v,int pos,int target)
    {
        if(target<=0)
        {
            if(target==0)
                result.push_back(v);
            return;
        }
        
        for(int i=pos;i<candidates.size();i++)
        {
            if(i>pos && candidates[i]==candidates[i-1])
                continue;
            v.push_back(candidates[i]);
            backtrack(result,candidates,v,i+1,target-candidates[i]);
            v.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {

        vector<vector<int>> result;
        sort(candidates.begin(),candidates.end());
        vector<int> v;
        backtrack(result,candidates,v,0,target);
       
        return result;
    }
};
